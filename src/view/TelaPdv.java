/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import dao.ClienteDAO;
import dao.ImprimirDAO;
import dao.PedidoDAO;
import dao.VendaProdutoDAO;
import java.awt.Image;
import java.math.BigDecimal;
import static java.math.BigDecimal.ZERO;
import java.math.RoundingMode;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;
import model.Cliente;
import model.DiaHora;
import model.Pedido;
import model.Produto;
import net.proteanit.sql.DbUtils;
import utils.ConnectionFactory;

/**
 *
 * @author edmar_sr
 */
public class TelaPdv extends javax.swing.JFrame {

    /**
     * Creates new form Cadastro
     */
    public TelaPdv() {
        initComponents();
        lblCaixa.setText(usuario);
        //conexao = ConnectionFactory.conector();
        setLocationRelativeTo(null);
        try {
            MaskFormatter mascaraCpf = new MaskFormatter("###.###.###-##");
            MaskFormatter mascaraCelular = new MaskFormatter("(##) #####-####");
        } catch (ParseException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    //txtCpf = new JFormattedTextField(new MaskFormatter("###.###.###-##"));
    //txtCelular = new JFormattedTextField(new MaskFormatter("(##) #####-####"));
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngFormaDePagamento = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        tab = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblProdutos = new javax.swing.JTable();
        lblFoto = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        rbDinheiro = new javax.swing.JRadioButton();
        rbDebito = new javax.swing.JRadioButton();
        rbCredito = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        rbPix = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        txtProduto = new javax.swing.JTextField();
        lblProduto = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        cbUnidade = new javax.swing.JComboBox<>();
        txtPreco = new javax.swing.JTextField();
        txtDescricao = new javax.swing.JTextField();
        lblCodigo = new javax.swing.JLabel();
        lblUnidade = new javax.swing.JLabel();
        lblPreco = new javax.swing.JLabel();
        lblDescricao = new javax.swing.JLabel();
        lblUnidade1 = new javax.swing.JLabel();
        cbNomeCliente = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtEstoque = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        btnLimparProduto = new javax.swing.JButton();
        txtQuantidade = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtAplicarDesconto = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnAdicionar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        btnFinalizar = new javax.swing.JButton();
        txtAcrecimo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnSair = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLlabel2 = new javax.swing.JLabel();
        lblCaixa = new javax.swing.JLabel();
        lblOperador = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtHora = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        txtDesconto = new javax.swing.JTextField();
        txtValor = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Modulo PDV");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tblProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Código", "Produto", "Qtd", "Preço unit", "Desconto", "Total (c/ desc) "
            }
        ));
        tblProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProdutosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblProdutos);

        lblFoto.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btngFormaDePagamento.add(rbDinheiro);
        rbDinheiro.setText("Dinheiro");
        rbDinheiro.setEnabled(false);
        rbDinheiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDinheiroActionPerformed(evt);
            }
        });

        btngFormaDePagamento.add(rbDebito);
        rbDebito.setText("Débito");
        rbDebito.setEnabled(false);
        rbDebito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDebitoActionPerformed(evt);
            }
        });

        btngFormaDePagamento.add(rbCredito);
        rbCredito.setText("Crédito");
        rbCredito.setEnabled(false);
        rbCredito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCreditoActionPerformed(evt);
            }
        });

        jLabel2.setText("Forma de pagamento");

        btngFormaDePagamento.add(rbPix);
        rbPix.setText("Pix");
        rbPix.setEnabled(false);
        rbPix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPixActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 18, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbDinheiro)
                    .addComponent(rbDebito)
                    .addComponent(rbCredito)
                    .addComponent(rbPix))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbDinheiro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbDebito)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbCredito)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbPix)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtProduto.setEditable(false);
        txtProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProdutoKeyReleased(evt);
            }
        });

        lblProduto.setText("Produto");

        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoKeyReleased(evt);
            }
        });

        cbUnidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Duzia", "Gramas", "Kilo", "Litro", "ml", "Pote", "Saco", "Unidade" }));
        cbUnidade.setEnabled(false);
        cbUnidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUnidadeActionPerformed(evt);
            }
        });

        txtPreco.setEditable(false);

        txtDescricao.setEditable(false);

        lblCodigo.setText("Código");

        lblUnidade.setText("Unidade");

        lblPreco.setText("Preço");

        lblDescricao.setText("Descrição");

        lblUnidade1.setText("Cliente");

        cbNomeCliente.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                cbNomeClienteAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        cbNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNomeClienteActionPerformed(evt);
            }
        });
        cbNomeCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cbNomeClienteKeyReleased(evt);
            }
        });

        jLabel4.setText("Estoque");

        txtEstoque.setEditable(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(lblUnidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(lblCodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(lblProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(lblUnidade1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDescricao)
                            .addComponent(lblPreco))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(txtPreco)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUnidade1)
                    .addComponent(cbNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProduto)
                    .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigo)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUnidade)
                    .addComponent(cbUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPreco)
                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescricao)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        btnLimparProduto.setText("Limpar");
        btnLimparProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparProdutoActionPerformed(evt);
            }
        });

        jLabel10.setText("Quantidade");

        txtAplicarDesconto.setText("0");

        jLabel11.setText("% Desconto");

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        btnFinalizar.setText("Finalizar");
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        txtAcrecimo.setEditable(false);
        txtAcrecimo.setText("0");

        jLabel5.setText("% Acrécimo");

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnLimparProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jLabel10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAplicarDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(txtAcrecimo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAdicionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFinalizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSair, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimparProduto)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAplicarDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionar)
                    .addComponent(btnRemover)
                    .addComponent(btnFinalizar)
                    .addComponent(txtAcrecimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSair))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 219, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );

        jLabel1.setText("Caixa");

        jLlabel2.setText("Operador");

        lblCaixa.setText("jLabel4");

        lblOperador.setText("jLabel5");

        jLabel3.setText("Hora");

        txtHora.setEditable(false);

        jLabel7.setText("Valor");

        jLabel8.setText("Desconto");

        jLabel9.setText("Total");

        txtTotal.setEditable(false);
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });

        txtDesconto.setEditable(false);

        txtValor.setEditable(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(48, 48, 48)
                                .addComponent(txtTotal))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel3))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDesconto)
                                    .addComponent(txtValor)
                                    .addComponent(txtHora))))
                        .addGap(14, 14, 14))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLlabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblOperador)
                            .addComponent(lblCaixa))
                        .addGap(54, 54, 54))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblCaixa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLlabel2)
                    .addComponent(lblOperador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 968, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 28, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        tab.addTab("PDV", jPanel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tab, javax.swing.GroupLayout.PREFERRED_SIZE, 1134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tab)
                .addContainerGap())
        );

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1024, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    //executa na abertura da tela
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        DiaHora r = new DiaHora(txtHora);
        r.start();

    }//GEN-LAST:event_formWindowOpened

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
        try {
            // TODO add your handling code here:

            finalizaVenda();
        } catch (SQLException ex) {
            Logger.getLogger(TelaPdv.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnFinalizarActionPerformed

    public void finalizaVenda() throws SQLException{
        int question = JOptionPane.showConfirmDialog(null, "Deseja finalizar o pedido do cliente " + cbNomeCliente.getSelectedItem() + "?", "Atenção", JOptionPane.YES_NO_OPTION);
        if (question == JOptionPane.YES_OPTION) {

            PedidoDAO pedidoDao = new PedidoDAO();
            Cliente nomeToCliente = new Cliente();
            Produto precoToProduto = new Produto();
            VendaProdutoDAO vendaProdutoDao = new VendaProdutoDAO();
            FinalizaVenda finalizaVenda = new FinalizaVenda();
            try {
                if (tblProdutos.getRowCount() > 0 && (rbCredito.isSelected() || rbDebito.isSelected() || rbDinheiro.isSelected() || rbPix.isSelected())) {
                    String nomeCliente = cbNomeCliente.getSelectedItem().toString();
                    String nomeProduto;
                    String codigoProduto;
                    Double precoUnitario;          
                    Double quantidade;
                    Object desconto;
                    Object precoTotal = 0;
                    String operador = lblOperador.getText();

                    Date dataCompleta;
                    SimpleDateFormat sdfDia = new SimpleDateFormat("yyyy-MM-dd");
                    Calendar c = Calendar.getInstance();
                    java.util.Date diaCompleto = c.getTime();
                    String anoCompleto = sdfDia.format(diaCompleto).toString();

                    String formaPagamento = null;

                    if (rbCredito.isSelected()) {
                        formaPagamento = "Credito";
                        //txtAcrecimo.setText("0");
                    }
                    if (rbDebito.isSelected()) {
                        formaPagamento = "Debito";
                        //txtAcrecimo.setText("3");
                    }
                    if (rbDinheiro.isSelected()) {
                        formaPagamento = "Dinheiro";
                        //txtAcrecimo.setText("6");
                    }    
                    if (rbPix.isSelected()) {
                        formaPagamento = "Pix";
                        //txtAcrecimo.setText("0");
                    }
                    
                    /*Nova tela de pagamento
                    finalizaVenda.finaliza(txtValor.getText(), txtDesconto.getText(), txtTotal.getText());
                    FinalizaVenda finalizaVenda = new FinalizaVenda();
                    finalizaVenda.setVisible(true);
                    finalizaVenda.setResizable(false);
                    finalizaVenda.setLocationRelativeTo(null);*/

                    for (int i = 0; i < tblProdutos.getRowCount(); i++) {
                        codigoProduto = (String) tblProdutos.getValueAt(i, 1);
                        nomeProduto = (String) tblProdutos.getValueAt(i, 2);
                        quantidade = Double.parseDouble((String) tblProdutos.getValueAt(i, 3));
                        precoUnitario = Double.parseDouble((String)tblProdutos.getValueAt(i, 4));
                        desconto = tblProdutos.getValueAt(i, 5);
                        precoTotal = tblProdutos.getValueAt(i, 6);

                        //insertVendaProduto(codigoProduto, nomeProduto, quantidade, precoUnitario, desconto, precoTotal, formaPagamento, data, operador, nomeCliente);
                        vendaProdutoDao.insertVendaProduto(codigoProduto, nomeProduto, quantidade, precoUnitario, desconto, precoTotal, formaPagamento, anoCompleto, operador, nomeCliente);
                    }

                    Double campoTotal = Double.parseDouble(txtTotal.getText() + txtAcrecimo.getText());
                    
                    nomeToCliente.setNome(nomeCliente);
                    precoToProduto.setPrecoTotal(campoTotal);
                    pedidoDao.insertPedido(nomeToCliente, precoToProduto, anoCompleto, operador);
                    System.out.println(nomeToCliente.getNome());
                    System.out.println(precoToProduto.getPrecoTotal());
                    limpaTelaETabela();
                    cbNomeCliente.setEnabled(true);
                    btnAdicionar.setEnabled(true);
                    btnRemover.setEnabled(true);
                    btngFormaDePagamento.clearSelection();
                    txtCodigo.setEnabled(true);
                    rbCredito.setEnabled(false);
                    rbDebito.setEnabled(false);
                    rbDinheiro.setEnabled(false);
                    rbPix.setEnabled(false);
                    System.out.println("Venda finalizada com sucesso");

                } else if (tblProdutos.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(null, "Verifique se ha itens adicionados.", "Erro", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Selecione a forma de pagamento e clique em finalizar novamente.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                    rbDinheiro.setEnabled(true);
                    rbDebito.setEnabled(true);
                    rbCredito.setEnabled(true);
                    rbPix.setEnabled(true);
                    txtCodigo.setEnabled(false);
                    cbNomeCliente.setEnabled(false);
                    btnAdicionar.setEnabled(false);
                    btnRemover.setEnabled(false);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
                String codigoProduto;
                Double quantidade;

                for (int i = 0; i < tblProdutos.getRowCount(); i++) {
                    codigoProduto = (String) tblProdutos.getValueAt(i, 1);
                    quantidade = Double.parseDouble((String) tblProdutos.getValueAt(i, 3));

                    vendaProdutoDao.acertoEstoqueBtnLimpar(codigoProduto, quantidade);
                }

                limpaTelaProdutoTabela();
                cbNomeCliente.setEnabled(true);
                btnAdicionar.setEnabled(true);
                btnRemover.setEnabled(true);

            }

        } else {
            JOptionPane.showMessageDialog(null, "Venda nao finalizada, continue adicionando produtos ou finalize a venda.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed

        try {

            DefaultTableModel model = (DefaultTableModel) tblProdutos.getModel();
            int linha = tblProdutos.getSelectedRow();
            System.out.println(linha);

            VendaProdutoDAO vendaProdutoDao = new VendaProdutoDAO();
            String codigoProduto;
            Double quantidade;
            codigoProduto = (String) tblProdutos.getValueAt(linha, 1);
            quantidade = Double.parseDouble((String) tblProdutos.getValueAt(linha, 3));
            vendaProdutoDao.acertoEstoqueBtnLimpar(codigoProduto, quantidade);

            Double desconto = Double.parseDouble(tblProdutos.getValueAt(linha, 5).toString());
            Double precoTotal = Double.parseDouble(tblProdutos.getValueAt(linha, 6).toString());

            model.removeRow(linha);

            Double calcValor = (Double.parseDouble(txtValor.getText()) - (precoTotal) - (desconto));
            BigDecimal bCalcValor = new BigDecimal(calcValor);
            txtValor.setText(bCalcValor.setScale(2, RoundingMode.HALF_UP) + "");
            BigDecimal bDesconto = new BigDecimal(desconto);
            BigDecimal bSetDesconto = new BigDecimal(txtDesconto.getText()).subtract(bDesconto);
            //Double calcDesconto = desconto - Double.parseDouble(txtValor.getText());
            //txtDesconto.setText(Double.parseDouble(txtDesconto.getText()) - desconto + "");
            txtDesconto.setText(bSetDesconto.setScale(2, RoundingMode.HALF_UP)+"");
            BigDecimal bSetTotal = new BigDecimal(somaValor());
            txtTotal.setText(bSetTotal.setScale(2, RoundingMode.HALF_UP)+ "");
            if (tblProdutos.getRowCount() == 0) {
                txtValor.setText(null);
                txtDesconto.setText(null);
                txtTotal.setText(null);
            }

            if (tblProdutos.getRowCount() == 1 && tblProdutos.getValueAt(0, 5).toString().equals("0.0")) {
                txtValor.setText(txtTotal.getText());
                txtDesconto.setText("0.0");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro!" + "\n" + e, "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        // TODO add your handling code here:
        try {
            VendaProdutoDAO vendaProdutoDao = new VendaProdutoDAO();
            double subtraiEstoque = 0 - Double.parseDouble(txtQuantidade.getText());
            String codigoProduto = txtCodigo.getText();
            double quantidade = Double.parseDouble(txtQuantidade.getText());
            double porcentagem = Double.parseDouble(txtAplicarDesconto.getText());
            //double porcentagemDouble = Double.parseDouble(txtAplicarDesconto.getText());
            //BigDecimal porcentagem = BigDecimal.valueOf(porcentagemDouble);
            try {
                if (!txtAplicarDesconto.getText().equals(null) && !txtQuantidade.getText().equals(null) && quantidade > 0 && porcentagem >= 0) {
                    boolean estoqueOk = vendaProdutoDao.acertoEstoqueBtnAdicionar(codigoProduto, subtraiEstoque, quantidade);
                    if (estoqueOk) {
                        pegarConteudoBtn();
                        limpaTelaProdutoAdicionar();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Erro nas validações, verifique:\n \n -Valores negativos\n -Caracteres inválidos nos campos\n -Campos vazios", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro nas validações, verifique:\n \n -Valores negativos\n -Caracteres inválidos nos campos\n -Campos vazios \n \n"+e, "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro nas validações, verifique:\n \n -Valores negativos\n -Caracteres inválidos nos campos\n -Campos vazios \n \n"+e, "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnLimparProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparProdutoActionPerformed
        VendaProdutoDAO vendaProdutoDao = new VendaProdutoDAO();
        String codigoProduto;
        Double quantidade;

        for (int i = 0; i < tblProdutos.getRowCount(); i++) {
            codigoProduto = (String) tblProdutos.getValueAt(i, 1);
            quantidade = Double.parseDouble((String) tblProdutos.getValueAt(i, 3));

            try {
                vendaProdutoDao.acertoEstoqueBtnLimpar(codigoProduto, quantidade);
            } catch (SQLException ex) {
                Logger.getLogger(TelaPdv.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        limpaTelaProdutoTabela();
    }//GEN-LAST:event_btnLimparProdutoActionPerformed

    private void cbNomeClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbNomeClienteKeyReleased

    }//GEN-LAST:event_cbNomeClienteKeyReleased

    private void cbNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNomeClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNomeClienteActionPerformed

    private void cbNomeClienteAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_cbNomeClienteAncestorAdded
        ClienteDAO clienteDao = new ClienteDAO();
        List<Cliente> listaClientes = new ArrayList<Cliente>();

        try {
            listaClientes = clienteDao.listarCliente();
        } catch (SQLException ex) {
            Logger.getLogger(TelaPdv.class.getName()).log(Level.SEVERE, null, ex);
        }

        DefaultComboBoxModel model = new DefaultComboBoxModel(listaClientes.toArray());
        cbNomeCliente.setModel(model);
    }//GEN-LAST:event_cbNomeClienteAncestorAdded

    private void cbUnidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUnidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbUnidadeActionPerformed

    private void txtCodigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyReleased
        try {
            pesquisarProduto();
        } catch (SQLException ex) {
            Logger.getLogger(TelaPdv.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_txtCodigoKeyReleased

    private void txtCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyPressed

    }//GEN-LAST:event_txtCodigoKeyPressed

    private void txtProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProdutoKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtProdutoKeyReleased

    private void rbCreditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCreditoActionPerformed
        // TODO add your handling code here:
        float total = somaValor();
        if (rbCredito.isSelected()) {
            rbDinheiro.setSelected(false);
            rbDebito.setSelected(false);
            txtAcrecimo.setText("6");
            if (!txtTotal.getText().isEmpty() || !txtTotal.getText().isBlank()) {
                Double valorAcrecimo = total + (total * (Double.parseDouble(txtAcrecimo.getText()) / 100));
                BigDecimal bValorAcrecimo = new BigDecimal(valorAcrecimo);
                txtTotal.setText(String.valueOf(bValorAcrecimo.setScale(2, RoundingMode.HALF_UP)));
            }
        }
    }//GEN-LAST:event_rbCreditoActionPerformed

    private void rbDebitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbDebitoActionPerformed
        // TODO add your handling code here:
        float total = somaValor();
        if (rbDebito.isSelected()) {
            rbDinheiro.setSelected(false);
            rbCredito.setSelected(false);
            txtAcrecimo.setText("3");
            if (!txtTotal.getText().isEmpty() || !txtTotal.getText().isBlank()) {
                Double valorAcrecimo = total + (total * (Double.parseDouble(txtAcrecimo.getText()) / 100));
                BigDecimal bValorAcrecimo = new BigDecimal(valorAcrecimo);
                txtTotal.setText(String.valueOf(bValorAcrecimo.setScale(2, RoundingMode.HALF_UP)));
            }
        }
    }//GEN-LAST:event_rbDebitoActionPerformed

    private void rbDinheiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbDinheiroActionPerformed
        // TODO add your handling code here:
        float total = somaValor();
        if (rbDinheiro.isSelected()) {
            rbDebito.setSelected(false);
            rbCredito.setSelected(false);
            txtAcrecimo.setText("0");
            BigDecimal bTotal = new BigDecimal(total);
            txtTotal.setText(bTotal.setScale(2, RoundingMode.HALF_UP) + "");
        }
    }//GEN-LAST:event_rbDinheiroActionPerformed

    private void tblProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProdutosMouseClicked
        // TODO add your handling code here:
        //setCamposProdutos();
    }//GEN-LAST:event_tblProdutosMouseClicked

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:
        int question = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja Sair?", "Sair", JOptionPane.YES_NO_OPTION);
        if (question == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_btnSairActionPerformed

    private void rbPixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPixActionPerformed
        // TODO add your handling code here:
        float total = somaValor();
        if (rbPix.isSelected()) {
            rbDebito.setSelected(false);
            rbCredito.setSelected(false);
            rbDinheiro.setSelected(false);
            txtAcrecimo.setText("0");
            BigDecimal bTotal = new BigDecimal(total);
            txtTotal.setText(bTotal.setScale(2, RoundingMode.HALF_UP) + "");
        }
    }//GEN-LAST:event_rbPixActionPerformed

    
   
    //Método que monta a Jtable adicionando produtos automaticamente com leitor de codigo de barras
    private void pegarConteudo(java.awt.event.KeyEvent e) { //arrumar para receber BigDecimal

        Double preco = Double.parseDouble(txtPreco.getText());
        Double quantidade = Double.parseDouble(txtQuantidade.getText());
        Double desconto = Double.valueOf(txtAplicarDesconto.getText());
        Double descontoAplicado = (preco * quantidade) * (desconto / 100);
        DefaultTableModel model = (DefaultTableModel) tblProdutos.getModel();
        if (e.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            item += 1;
            model.addRow(new Object[]{
                //item,
                model.getRowCount() + 1,
                txtCodigo.getText(),
                txtProduto.getText(),
                txtQuantidade.getText(),
                txtPreco.getText(),
                descontoAplicado, //Double.parseDouble((txtPreco.getText())* Integer.parseInt(txtQuantidade.getText()) - descontoAplicado) + Double.parseDouble(txtAcrecimo.getText())
            });
            txtTotal.setText(somaValor() + "");
            txtDesconto.setText(0 - somaDesconto() + "");
            txtValor.setText(somaValor() + (-somaDesconto()) + "");
        }
    }

    //metodo que monta a jtable quando o botao adicionar é pressionado
    private void pegarConteudoBtn() {

        float preco = Float.parseFloat(txtPreco.getText());
        float quantidade = Float.parseFloat(txtQuantidade.getText());
        float desconto = Float.parseFloat(txtAplicarDesconto.getText());
        float descontoAplicado = ((preco * quantidade) * (desconto / 100));
        DefaultTableModel model = (DefaultTableModel) tblProdutos.getModel();

        item += 1;
        model.addRow(new Object[]{
            //item,
            model.getRowCount() + 1,
            txtCodigo.getText(),
            txtProduto.getText(),
            txtQuantidade.getText(),
            txtPreco.getText(),
            descontoAplicado,
            Float.parseFloat(txtPreco.getText()) * Float.parseFloat(txtQuantidade.getText()) - descontoAplicado
        });
        BigDecimal bTotal = new BigDecimal(somaValor()).setScale(2, RoundingMode.HALF_UP);
        BigDecimal bDesconto = new BigDecimal(somaDesconto()).setScale(2, RoundingMode.HALF_UP);
        BigDecimal bValor = bTotal.add(bDesconto).setScale(2, RoundingMode.HALF_UP);
        //txtTotal.setText(somaValor() + "");
        //txtDesconto.setText(somaDesconto() + "");
        //txtValor.setText(somaValor() + (somaDesconto()) + "");
        txtTotal.setText(bTotal.setScale(2, RoundingMode.HALF_UP)+"");
        txtDesconto.setText(bDesconto.setScale(2, RoundingMode.HALF_UP) + "");
        txtValor.setText(bValor.setScale(2, RoundingMode.HALF_UP) + "");

    }

    //soma os valores da coluna valor do jtable
    public float somaValor() {
        float soma = 0, valor = 0;
        int cont = tblProdutos.getRowCount();
        for (int i = 0; i < cont; i++) {
            valor = Float.parseFloat(String.valueOf(tblProdutos.getValueAt(i, 6)));
            soma += valor;
        }
        return soma;
    }
    
    //soma os valores dos descontos da coluna desconto do jtable
    private float somaDesconto() {
        float soma = 0, valor = 0;
        int cont = tblProdutos.getRowCount();
        for (int i = 0; i < cont; i++) {
            valor = Float.parseFloat(String.valueOf(tblProdutos.getValueAt(i, 5)));
            soma += valor;
        }
        return soma;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPdv().setVisible(true);
            }
        });
    }

    private void excluirProduto() throws SQLException {
        String sql = "delete from produtos where codigo = ?";
        String sqlConsultaProduto = "select * from produtos where codigo = ?";
        try {
            pst = conexao.prepareStatement(sqlConsultaProduto);
            pst.setString(1, txtCodigo.getText());
            rs = pst.executeQuery();

            if (rs.next()) {
                pst = conexao.prepareStatement(sql);
                pst.setString(1, txtCodigo.getText());

                boolean alteracao = pst.execute();
                JOptionPane.showMessageDialog(null, "O Produto com código " + txtCodigo.getText() + " foi excluído.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                conexao.close();
            } else {
                JOptionPane.showMessageDialog(null, "Exclusão não efetuada. Não foi encontrado produto com código " + txtCodigo.getText(), "Erro!", JOptionPane.ERROR_MESSAGE);
                conexao.close();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            conexao.close();
        }
    }

    private void alterarProduto() throws SQLException {
        String sql = "update produtos set preco = ?, nome = ?, descricao = ?, unidade = ?, foto = ? where codigo = ?";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtPreco.getText());
            pst.setString(2, txtProduto.getText());
            pst.setString(3, txtDescricao.getText());
            pst.setString(4, (String) cbUnidade.getSelectedItem());
            //pst.setString(5, txtFoto.getText());
            pst.setString(5, caminhoFoto);
            pst.setString(6, txtCodigo.getText());
            int alteracao = pst.executeUpdate();

            if (alteracao > 0) {
                JOptionPane.showMessageDialog(null, "Alteração realizada com sucesso");
                pesquisarProduto();
            } else {
                JOptionPane.showMessageDialog(null, "Nenhuma alteração foi realizada.", "Aviso", JOptionPane.WARNING_MESSAGE);
            }
            conexao.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Erro!", JOptionPane.ERROR_MESSAGE);
            conexao.close();
        }
    }

    //metodo para preencher automaticamente a jtable com like do que for digitado no campo produto - funciona junto com o evento de key do campo produto
    private void pesquisarProduto() throws SQLException {
        conexao = ConnectionFactory.conector(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
        String sql = "select * from produtos where codigo = ?";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtCodigo.getText());
            rs = pst.executeQuery();

            if (rs.next()) {
                //JOptionPane.showMessageDialog(null, "Entrou aqui");
                txtProduto.setText(rs.getString("nome"));
                txtPreco.setText(rs.getString("preco"));
                txtDescricao.setText(rs.getString("descricao"));
                cbUnidade.setSelectedItem(rs.getString("unidade"));
                txtEstoque.setText(rs.getString("estoque"));

                ImageIcon imageIcon = new ImageIcon(new ImageIcon(rs.getString("foto")).getImage().getScaledInstance(150, 150, Image.SCALE_DEFAULT));
                lblFoto.setIcon(imageIcon);
                conexao.close();

            } else {
                //JOptionPane.showMessageDialog(null, "Nao entrou ");
                limpaTelaProdutoMantemCodigo();
                txtProduto.setText(null);
                conexao.close();
            }
            //tblProdutos.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            conexao.close();
        }
    }

    //metodo para preencher automaticamente os campos quando selecionada a linha na tabela - funciona junto com o evento de click do mouise na jtable
    private void setCamposProdutos() {
        int setar = tblProdutos.getSelectedRow();
        txtProduto.setText(tblProdutos.getModel().getValueAt(setar, 0).toString());
        txtCodigo.setText(tblProdutos.getModel().getValueAt(setar, 1).toString());
        txtPreco.setText(tblProdutos.getModel().getValueAt(setar, 2).toString());
        txtDescricao.setText(tblProdutos.getModel().getValueAt(setar, 4).toString());
        cbUnidade.setSelectedItem(tblProdutos.getModel().getValueAt(setar, 3).toString());
        //txtIdProduto.setText(tblProdutos.getModel().getValueAt(setar, 0).toString());
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(tblProdutos.getModel().getValueAt(setar, 5).toString()).getImage().getScaledInstance(140, 140, Image.SCALE_DEFAULT));
        lblFoto.setIcon(imageIcon);
        //lblFoto.setIcon("");
        //txtFoto.setText(tblProdutos.getModel().getValueAt(setar, 5).toString());
        //ImageIcon imageIcon = new ImageIcon(new ImageIcon("/Users/edmar_sr/Desktop/Edmar/Programacao/Java/Agrestina/imagensProdutos/"+txtFoto.getText()+".png").getImage().getScaledInstance(140, 140, Image.SCALE_DEFAULT));
        //lblFoto.setIcon(imageIcon);
    }

    private void limpaTelaProduto() {
        txtProduto.setText(null);
        txtPreco.setText(null);
        txtCodigo.setText(null);
        txtDescricao.setText(null);
        lblFoto.setIcon(null);
        txtEstoque.setText(null);
    }

    private void limpaTelaProdutoMantemCodigo() {
        txtProduto.setText(null);
        txtPreco.setText(null);
        txtDescricao.setText(null);
        lblFoto.setIcon(null);
        txtEstoque.setText(null);
    }

    private void limpaTelaProdutoTabela() {
        txtProduto.setText(null);
        txtPreco.setText(null);
        txtCodigo.setText(null);
        txtDescricao.setText(null);
        lblFoto.setIcon(null);
        txtEstoque.setText(null);
        DefaultTableModel model = (DefaultTableModel) tblProdutos.getModel();
        model.setRowCount(0);
        txtValor.setText(null);
        txtDesconto.setText(null);
        txtTotal.setText(null);
        txtAplicarDesconto.setText("0");
        txtQuantidade.setText(null);
        txtAcrecimo.setText("0");
        btngFormaDePagamento.clearSelection();
        rbDinheiro.setEnabled(false);
        rbDebito.setEnabled(false);
        rbCredito.setEnabled(false);
        rbPix.setEnabled(false);
        txtCodigo.setEnabled(true);
        cbNomeCliente.setEnabled(true);
        btnAdicionar.setEnabled(true);
        btnRemover.setEnabled(true);
        
    }

    private void limpaTelaProdutoAdicionar() {
        txtProduto.setText(null);
        txtPreco.setText(null);
        txtCodigo.setText(null);
        txtDescricao.setText(null);
        lblFoto.setIcon(null);
        txtAplicarDesconto.setText("0");
        txtQuantidade.setText(null);
        txtAcrecimo.setText("0");
        txtEstoque.setText(null);
    }

    private void salvarProduto() throws SQLException {

        String sql = "insert into produtos (codigo,preco,descricao,nome,unidade,foto) values (?,?,?,?,?,?)";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtCodigo.getText());
            pst.setString(2, txtPreco.getText());
            pst.setString(3, txtDescricao.getText());
            pst.setString(4, txtProduto.getText());
            pst.setString(5, (String) cbUnidade.getSelectedItem());
            //pst.setString(6, txtFoto.getText());
            pst.setString(6, caminhoFoto);
            pst.execute();

            JOptionPane.showMessageDialog(null, "Produto incluído com sucesso");
            conexao.close();
        } catch (SQLIntegrityConstraintViolationException e) {
            // TODO: handle exception
            JOptionPane.showMessageDialog(null, "Não é possível inserir o mesmo código duas vezes." + "\n" + e, "Erro!", JOptionPane.ERROR_MESSAGE);
            conexao.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Erro!", JOptionPane.ERROR_MESSAGE);
        }
    }

    /*private void insertVendaProduto(String codigoProduto, String nomeProduto, Double quantidade, Double precoUnitario, Object desconto, Object precoTotal, String formaPagamento, Date data, String operador, String nomeCliente) {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        String sql = "insert into vendaProduto (nome_cliente,nome_produto,codigo_produto,preco_unitario,quantidade,desconto,total,operador,data_pedido,forma_pagamento) values (?,?,?,?,?,?,?,?,?,?)";

        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, nomeCliente);
            pst.setString(2, nomeProduto);
            pst.setString(3, codigoProduto);
            pst.setDouble(4, precoUnitario);
            pst.setDouble(5, quantidade);
            pst.setObject(6, desconto);
            pst.setObject(7, precoTotal);
            pst.setString(8, operador);
            pst.setDate(9, data);
            pst.setString(10, formaPagamento);
            pst.execute();

            JOptionPane.showMessageDialog(null, "Pedido incluído com sucesso");

        } catch (SQLIntegrityConstraintViolationException e) {
            // TODO: handle exception
            JOptionPane.showMessageDialog(null, "Número de pedido ja usado." + "\n" + e, "Erro!", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Erro!", JOptionPane.ERROR_MESSAGE);
        }

    }*/

    //exporta nome do formulario de login para usar nessa tela
    void exportarNome(Cliente cliente) {
        lblOperador.setText(cliente.getNome());
    }

    private void limpaTelaETabela() {
        txtProduto.setText(null);
        txtPreco.setText(null);
        txtCodigo.setText(null);
        txtDescricao.setText(null);
        lblFoto.setIcon(null);
        txtValor.setText(null);
        txtDesconto.setText(null);
        txtTotal.setText(null);
        txtEstoque.setText(null);
        DefaultTableModel model = (DefaultTableModel) tblProdutos.getModel();
        model.setRowCount(0);
    }

    //JLabel lblFoto = new JLabel("Foto");
    Connection conexao = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    private JTable table;
    private String caminhoFoto;
    int item = 0;
    int controle = 0;
    String usuario = System.getProperty("user.name");


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnLimparProduto;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnSair;
    private javax.swing.ButtonGroup btngFormaDePagamento;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbNomeCliente;
    private javax.swing.JComboBox<String> cbUnidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLlabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCaixa;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblDescricao;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JLabel lblOperador;
    private javax.swing.JLabel lblPreco;
    private javax.swing.JLabel lblProduto;
    private javax.swing.JLabel lblUnidade;
    private javax.swing.JLabel lblUnidade1;
    private javax.swing.JRadioButton rbCredito;
    private javax.swing.JRadioButton rbDebito;
    private javax.swing.JRadioButton rbDinheiro;
    private javax.swing.JRadioButton rbPix;
    private javax.swing.JTabbedPane tab;
    private javax.swing.JTable tblProdutos;
    private javax.swing.JTextField txtAcrecimo;
    private javax.swing.JTextField txtAplicarDesconto;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDesconto;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtEstoque;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtPreco;
    private javax.swing.JTextField txtProduto;
    private javax.swing.JTextField txtQuantidade;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables

}
