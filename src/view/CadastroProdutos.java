/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import dao.ClienteCadastroDAO;
import dao.ProdutoDAO;
import dao.UsuarioDAO;
import java.awt.Image;
import java.io.File;
import java.sql.*;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;
import model.Cliente;
import model.Usuario;
import net.proteanit.sql.DbUtils;
import utils.ConnectionFactory;

/**
 *
 * @author edmar_sr
 */
public class CadastroProdutos extends javax.swing.JFrame {

    /**
     * Creates new form Cadastro
     */
    public CadastroProdutos() {
        initComponents();
        conexao = ConnectionFactory.conector(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
        try {
            MaskFormatter mascaraCpf = new MaskFormatter("###.###.###-##");
            MaskFormatter mascaraCelular = new MaskFormatter("(##) #####-####");
        } catch (ParseException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
    
    //txtCpf = new JFormattedTextField(new MaskFormatter("###.###.###-##"));
    //txtCelular = new JFormattedTextField(new MaskFormatter("(##) #####-####"));
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        tab = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblProdutos = new javax.swing.JTable();
        lblProduto = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JLabel();
        lblUnidade = new javax.swing.JLabel();
        lblPreco = new javax.swing.JLabel();
        lblDescricao = new javax.swing.JLabel();
        txtProduto = new javax.swing.JTextField();
        txtCodigo = new javax.swing.JTextField();
        txtPreco = new javax.swing.JTextField();
        txtDescricao = new javax.swing.JTextField();
        cbUnidade = new javax.swing.JComboBox<>();
        btnLimparProduto = new javax.swing.JButton();
        btnSalvarProduto = new javax.swing.JButton();
        btnAlterarProduto = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnFindFoto = new javax.swing.JButton();
        lblFoto = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtEstoque = new javax.swing.JTextField();
        btnAcertoDeEstoque = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        rbAtivoPro = new javax.swing.JRadioButton();
        rbInativoPro = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        lblOperadorPro = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Modulo de Produtos");
        setResizable(false);

        tblProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProdutosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblProdutos);

        lblProduto.setText("Produto");

        lblCodigo.setText("Código");

        lblUnidade.setText("Unidade");

        lblPreco.setText("Preço");

        lblDescricao.setText("Descrição");

        txtProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProdutoKeyReleased(evt);
            }
        });

        cbUnidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Duzia", "Gramas", "Kilo", "Litro", "ml", "Pote", "Saco", "Unidade" }));

        btnLimparProduto.setText("Limpar");
        btnLimparProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparProdutoActionPerformed(evt);
            }
        });

        btnSalvarProduto.setText("Incluir");
        btnSalvarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarProdutoActionPerformed(evt);
            }
        });

        btnAlterarProduto.setText("Alterar");
        btnAlterarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarProdutoActionPerformed(evt);
            }
        });

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnFindFoto.setText("Buscar foto");
        btnFindFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindFotoActionPerformed(evt);
            }
        });

        lblFoto.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Estoque");

        txtEstoque.setEditable(false);

        btnAcertoDeEstoque.setText("Acerto de estoque");
        btnAcertoDeEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcertoDeEstoqueActionPerformed(evt);
            }
        });

        jLabel3.setText("Ativo");

        buttonGroup2.add(rbAtivoPro);
        rbAtivoPro.setSelected(true);
        rbAtivoPro.setText("Ativo");

        buttonGroup2.add(rbInativoPro);
        rbInativoPro.setText("Inativo");

        jLabel4.setText("Usuário: ");

        lblOperadorPro.setText("usuario");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCodigo)
                                    .addComponent(lblUnidade)
                                    .addComponent(lblPreco)
                                    .addComponent(lblDescricao)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(51, 51, 51)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(rbAtivoPro)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rbInativoPro))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(txtEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnAcertoDeEstoque))
                                            .addComponent(txtCodigo, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbUnidade, javax.swing.GroupLayout.Alignment.LEADING, 0, 273, Short.MAX_VALUE)
                                            .addComponent(txtPreco, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtDescricao, javax.swing.GroupLayout.Alignment.LEADING))))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblProduto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(btnLimparProduto)
                                .addGap(57, 57, 57)
                                .addComponent(btnSalvarProduto)
                                .addGap(55, 55, 55)
                                .addComponent(btnAlterarProduto)
                                .addGap(32, 32, 32)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblOperadorPro))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnSair)
                                        .addGap(39, 39, 39)
                                        .addComponent(btnFindFoto)))
                                .addGap(0, 20, Short.MAX_VALUE)))
                        .addGap(0, 36, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblProduto))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblCodigo))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblUnidade)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblPreco)
                                        .addGap(6, 6, 6))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(cbUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(lblDescricao)
                                .addGap(6, 6, 6))
                            .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAcertoDeEstoque))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(rbAtivoPro)
                    .addComponent(rbInativoPro)
                    .addComponent(jLabel4)
                    .addComponent(lblOperadorPro))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimparProduto)
                    .addComponent(btnSalvarProduto)
                    .addComponent(btnAlterarProduto)
                    .addComponent(btnSair)
                    .addComponent(btnFindFoto))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tab.addTab("Produtos", jPanel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tab)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tab)
                .addContainerGap())
        );

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimparProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparProdutoActionPerformed
        limpaTelaProduto();
    }//GEN-LAST:event_btnLimparProdutoActionPerformed

    private void btnSalvarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarProdutoActionPerformed
        ProdutoDAO produtoDao = new ProdutoDAO();
        UsuarioDAO usuarioDao = new UsuarioDAO();
        int verificaPerfil = 0;
        try {
            verificaPerfil = usuarioDao.verificaPerfil(lblOperadorPro.getText());
        } catch (SQLException ex) {
            Logger.getLogger(CadastroProdutos.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (verificaPerfil == 1) {
            if (txtProduto.getText().equals("") || txtCodigo.getText().equals("") || txtPreco.getText().equals("") || txtDescricao.getText().equals("") || lblFoto.getText().equals(null)) {
                JOptionPane.showMessageDialog(null, "Preencha todos os campos");
            } else {
                try {
                    //salvarProduto();
                    produtoDao.salvarProduto(txtCodigo.getText(), txtPreco.getText(), txtDescricao.getText(), txtProduto.getText(), (String) cbUnidade.getSelectedItem(), caminhoFoto,rbAtivoPro.isSelected(),rbInativoPro.isSelected());
                } catch (SQLException ex) {
                    Logger.getLogger(CadastroProdutos.class.getName()).log(Level.SEVERE, null, ex);
                }
                //produtoDao.salvarProduto(txtCodigo.getText(), txtPreco.getText(), txtDescricao.getText(), txtProduto.getText(), (String) cbUnidade.getSelectedItem(), caminhoFoto);
                limpaTelaProduto();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Perfil não autorizado para essa transação", "Erro", JOptionPane.ERROR_MESSAGE);
            limpaTelaProduto();
        }
    }//GEN-LAST:event_btnSalvarProdutoActionPerformed

    private void btnAlterarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarProdutoActionPerformed
        // TODO add your handling code here:
        ProdutoDAO produtoDao = new ProdutoDAO();
        UsuarioDAO usuarioDao = new UsuarioDAO();
        int verificaPerfil = 0;
        try {
            verificaPerfil = usuarioDao.verificaPerfil(lblOperadorPro.getText());
        } catch (SQLException ex) {
            Logger.getLogger(CadastroProdutos.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (verificaPerfil == 1 || verificaPerfil == 2) {
            int question = JOptionPane.showConfirmDialog(null, "Deseja Salvar as alterações?", "Atenção", JOptionPane.YES_NO_OPTION);
            if (txtProduto.getText().equals("") || txtCodigo.getText().equals("") || txtPreco.getText().equals("") || txtDescricao.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Preencha todos os campos");
            } else {
                if (question == JOptionPane.YES_OPTION) {
                    try {
                        //alterarProduto();
                        produtoDao.alterarProduto(txtPreco.getText(), txtProduto.getText(), txtDescricao.getText(), (String) cbUnidade.getSelectedItem(), caminhoFoto, txtCodigo.getText(),rbAtivoPro.isSelected(),rbInativoPro.isSelected());
                    } catch (SQLException ex) {
                        Logger.getLogger(CadastroProdutos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    //produtoDao.alterarProduto(txtPreco.getText(), txtProduto.getText(), txtDescricao.getText(), (String) cbUnidade.getSelectedItem(), caminhoFoto, txtCodigo.getText());
                    limpaTelaProduto();
                    try {
                        pesquisarProduto();
                    } catch (SQLException ex) {
                        Logger.getLogger(CadastroProdutos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Nenhuma alteração foi realizada.", "Aviso", JOptionPane.WARNING_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Perfil não autorizado para essa transação", "Erro", JOptionPane.ERROR_MESSAGE);
            limpaTelaProduto();
        }
    }//GEN-LAST:event_btnAlterarProdutoActionPerformed

    private void btnFindFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindFotoActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        fc.setCurrentDirectory(new File( "C:\\Users\\Camila\\Downloads"));
        fc.setFileFilter(new FileNameExtensionFilter("Image files", "bmp", "png", "jpg", "jpeg")); fc.setAcceptAllFileFilterUsed(false);
        
        fc.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent e) {
	        if (e.getPropertyName().equals(JFileChooser.DIRECTORY_CHANGED_PROPERTY)) {
	        	fc.setCurrentDirectory(new File( "C:\\Users\\Camila\\Downloads"));
	        }
            }
	});
        
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        
        int respFc = fc.showOpenDialog(null);

        if (respFc == JFileChooser.APPROVE_OPTION) {
            caminhoFoto = fc.getSelectedFile().toString();
            //ImageIcon imageIcon = new ImageIcon(new ImageIcon(caminhoFoto).getImage().getScaledInstance(250, 250, Image.SCALE_AREA_AVERAGING));
            ImageIcon imageIcon = new ImageIcon(new ImageIcon(caminhoFoto).getImage().getScaledInstance(140, 140, Image.SCALE_DEFAULT));
            lblFoto.setIcon(imageIcon);
            System.out.println(caminhoFoto);
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum arquivo selecionado.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnFindFotoActionPerformed

    private void txtProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProdutoKeyReleased
        try {
            // TODO add your handling code here:
            pesquisarProduto();
        } catch (SQLException ex) {
            Logger.getLogger(CadastroProdutos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtProdutoKeyReleased

    private void tblProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProdutosMouseClicked
        // TODO add your handling code here:
        setCamposProdutos();
    }//GEN-LAST:event_tblProdutosMouseClicked

    private void btnAcertoDeEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcertoDeEstoqueActionPerformed
        // TODO add your handling code here:
        limpaTelaProduto();
        EstoqueTela principal = new EstoqueTela();
	principal.setVisible(true);
	principal.setResizable(false);
	principal.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnAcertoDeEstoqueActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroProdutos().setVisible(true);
            }
        });
    }

    //metodo para preencher automaticamente os campos quando selecionada a linha na tabela - funciona junto com o evento de click do mouise na jtable
    private void setCamposProdutos() {
        int setar = tblProdutos.getSelectedRow();
        txtProduto.setText(tblProdutos.getModel().getValueAt(setar, 1).toString());
        txtCodigo.setText(tblProdutos.getModel().getValueAt(setar, 0).toString());
        txtPreco.setText(tblProdutos.getModel().getValueAt(setar, 2).toString());
        txtDescricao.setText(tblProdutos.getModel().getValueAt(setar, 3).toString());
        cbUnidade.setSelectedItem(tblProdutos.getModel().getValueAt(setar, 4).toString());
        //txtIdProduto.setText(tblProdutos.getModel().getValueAt(setar, 0).toString());
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(tblProdutos.getModel().getValueAt(setar, 5).toString()).getImage().getScaledInstance(140, 140, Image.SCALE_DEFAULT));
        lblFoto.setIcon(imageIcon);
        caminhoFoto = tblProdutos.getModel().getValueAt(setar, 5).toString();
        txtEstoque.setText(tblProdutos.getModel().getValueAt(setar, 6).toString());
        if(tblProdutos.getValueAt(setar, 7).equals(true)){
            rbAtivoPro.setSelected(true);
        }
        if(tblProdutos.getValueAt(setar, 7).equals(false)){
            rbInativoPro.setSelected(true);
        }
        //lblFoto.setIcon("");
        //txtFoto.setText(tblProdutos.getModel().getValueAt(setar, 5).toString());
        //ImageIcon imageIcon = new ImageIcon(new ImageIcon("/Users/edmar_sr/Desktop/Edmar/Programacao/Java/Agrestina/imagensProdutos/"+txtFoto.getText()+".png").getImage().getScaledInstance(140, 140, Image.SCALE_DEFAULT));
        //lblFoto.setIcon(imageIcon);
    }

    private void limpaTelaProduto() {
        txtProduto.setText(null);
        txtPreco.setText(null);
        txtCodigo.setText(null);
        txtDescricao.setText(null);
        txtEstoque.setText(null);
        lblFoto.setIcon(null);
        caminhoFoto = null;
        DefaultTableModel model = (DefaultTableModel) tblProdutos.getModel();
        model.setRowCount(0);
    }

    
    
    
    
    
    
    //salvarProduto(txtCodigo.getText(),txtPreco.getText(),txtDescricao.getText(),txtProduto.getText(),(String) cbUnidade.getSelectedItem(),caminhoFoto);
    /*private void salvarProduto() {
        String sql = "insert into produtos (codigo,preco,descricao,nome,unidade,foto,estoque) values (?,?,?,?,?,?,0)";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtCodigo.getText());
            pst.setString(2, txtPreco.getText());
            pst.setString(3, txtDescricao.getText());
            pst.setString(4, txtProduto.getText());
            pst.setString(5, (String) cbUnidade.getSelectedItem());
            //pst.setString(6, txtFoto.getText());
            pst.setString(6, caminhoFoto);
            pst.execute();

            JOptionPane.showMessageDialog(null, "Produto incluído com sucesso");

        } catch (SQLIntegrityConstraintViolationException e) {
            // TODO: handle exception
            JOptionPane.showMessageDialog(null, "Não é possível inserir o mesmo código duas vezes." + "\n" + e, "Erro!", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Erro!", JOptionPane.ERROR_MESSAGE);
        }
    }*/
   
    /*private void alterarProduto() {
        String sql = "update produtos set preco = ?, nome = ?, descricao = ?, unidade = ?, foto = ? where codigo = ?";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtPreco.getText());
            pst.setString(2, txtProduto.getText());
            pst.setString(3, txtDescricao.getText());
            pst.setString(4, (String) cbUnidade.getSelectedItem());
            //pst.setString(5, txtFoto.getText());
            pst.setString(5, caminhoFoto);
            pst.setString(6, txtCodigo.getText());
            int alteracao = pst.executeUpdate();

            if (alteracao > 0) {
                JOptionPane.showMessageDialog(null, "Alteração realizada com sucesso");
                pesquisarProduto();
            } else {
                JOptionPane.showMessageDialog(null, "Nenhuma alteração foi realizada.", "Aviso", JOptionPane.WARNING_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Erro!", JOptionPane.ERROR_MESSAGE);
        }
    }*/
    
    
    
     //metodo para preencher automaticamente a jtable com like do que for digitado no campo produto - funciona junto com o evento de key do campo produto
    private void pesquisarProduto() throws SQLException {
        conexao = ConnectionFactory.conector(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
        String sql = "SELECT * FROM produtos WHERE nome LIKE ? ORDER BY nome";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtProduto.getText() + "%");
            rs = pst.executeQuery();

            tblProdutos.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            
        }
        conexao.close();

    }

    
    /*private void excluirProduto() {
        String sql = "delete from produtos where codigo = ?";
        String sqlConsultaProduto = "select * from produtos where codigo = ?";
        try {
            pst = conexao.prepareStatement(sqlConsultaProduto);
            pst.setString(1, txtCodigo.getText());
            rs = pst.executeQuery();

            if (rs.next()) {
                pst = conexao.prepareStatement(sql);
                pst.setString(1, txtCodigo.getText());

                boolean alteracao = pst.execute();
                JOptionPane.showMessageDialog(null, "O Produto com código " + txtCodigo.getText() + " foi excluído.", "Aviso", JOptionPane.INFORMATION_MESSAGE);

            } else {
                JOptionPane.showMessageDialog(null, "Exclusão não efetuada. Não foi encontrado produto com código " + txtCodigo.getText(), "Erro!", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }*/
    
    /*private void salvarCliente() {
        //String sql = "insert into clientes (nome,endereco,cpf_cnpj,telefone,email) values (?,?,?,?,?)";
        String sql = "insert into clientes (nome,endereco,cpf_cnpj,telefone,email,ativo) values (?,?,?,?,?,?)";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtNomeCliente.getText());
            pst.setString(2, txtEndereco.getText());
            pst.setString(3, txtCpf.getText());
            pst.setString(4, txtCelular.getText());
            pst.setString(5, txtEmail.getText());
            if(rbAtivo.isSelected()){
                pst.setBoolean(6, true);
            }
            if(rbInativo.isSelected()){
                pst.setBoolean(6, false);
            }
            pst.execute();

            JOptionPane.showMessageDialog(null, "Cliente incluído com sucesso");

        } catch (SQLIntegrityConstraintViolationException e) {
            // TODO: handle exception
            JOptionPane.showMessageDialog(null, "Não é possível inserir o mesmo CPF/CNPJ duas vezes." + "\n" + e, "Erro!", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Erro!", JOptionPane.ERROR_MESSAGE);
        }

    }*/
    
    /*private void alterarCliente() {

        String sql = "update clientes set nome = ?, endereco = ?, telefone = ?, email = ?, ativo = ? where cpf_cnpj = ?";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtNomeCliente.getText());
            pst.setString(2, txtEndereco.getText());
            pst.setString(3, txtCelular.getText());
            pst.setString(4, txtEmail.getText());
            pst.setString(6, txtCpf.getText());
            if(rbAtivo.isSelected()){
                pst.setBoolean(5, true);
            }
            if(rbInativo.isSelected()){
                pst.setBoolean(5, false);
            }
            int alteracao = pst.executeUpdate();
            

            if (alteracao > 0) {
                JOptionPane.showMessageDialog(null, "Alteração realizada com sucesso");
                pesquisarClientes();
            } else {
                JOptionPane.showMessageDialog(null, "Nenhuma alteração foi realizada.", "Aviso", JOptionPane.WARNING_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }*/
    
    /*private void excluirCliente() {
        String sql = "delete from clientes where cpf_cnpj = ?";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtCpf.getText());
            boolean alteracao = pst.execute();
            JOptionPane.showMessageDialog(null, "O Cliente com CNPJ/CPF " + txtCpf.getText() + " foi excluído", "Aviso", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void exclusaoLogicaCliente() {
        String sql = "update clientes set ativo = false where cpf_cnpj = ?";
        try {
            pst = conexao.prepareStatement(sql);
            pst.setString(1, txtCpf.getText());
            int alteracao = pst.executeUpdate();

            if (alteracao > 0) {
                JOptionPane.showMessageDialog(null, "Exclusão efetuada com sucesso");
                pesquisarClientes();
            } else {
                JOptionPane.showMessageDialog(null, "Nenhuma alteração foi realizada.", "Aviso", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }*/
    
    void exportarNome(Cliente usuario) {
        lblOperadorPro.setText(usuario.getNome());
    }
    
    //JLabel lblFoto = new JLabel("Foto");
    Connection conexao = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    private JTable table;
    private String caminhoFoto;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcertoDeEstoque;
    private javax.swing.JButton btnAlterarProduto;
    private javax.swing.JButton btnFindFoto;
    private javax.swing.JButton btnLimparProduto;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvarProduto;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbUnidade;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblDescricao;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JLabel lblOperadorPro;
    private javax.swing.JLabel lblPreco;
    private javax.swing.JLabel lblProduto;
    private javax.swing.JLabel lblUnidade;
    private javax.swing.JRadioButton rbAtivoPro;
    private javax.swing.JRadioButton rbInativoPro;
    private javax.swing.JTabbedPane tab;
    private javax.swing.JTable tblProdutos;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtEstoque;
    private javax.swing.JTextField txtPreco;
    private javax.swing.JTextField txtProduto;
    // End of variables declaration//GEN-END:variables

}
